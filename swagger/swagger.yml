swagger: "2.0"
info:
  title: Backend Service API
  description: Backend Service API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
basePath: /v1
paths:
  /clusters/:
    post:
      tags:
      - clusters
      description: get Clusters
      operationId: ClusterController.GetCluster
      parameters:
      - in: query
        name: name
        description: Cluster name
        type: string
      - in: query
        name: ip
        description: Cluster ip
        type: string
      - in: query
        name: page
        description: page
        type: integer
        format: int64
        default: "1"
      - in: query
        name: number
        description: page
        type: integer
        format: int64
        default: "20"
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /clusters/{id}:
    delete:
      tags:
      - clusters
      description: dd Cluster
      operationId: ClusterController.AddCluster
      parameters:
      - in: path
        name: id
        description: Cluster id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /clusters/addCluster:
    post:
      tags:
      - clusters
      description: Add Cluster
      operationId: ClusterController.AddCluster
      parameters:
      - in: body
        name: Cluster
        description: Cluster object
        required: true
        schema:
          $ref: '#/definitions/models.Cluster'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /hosts/:
    post:
      tags:
      - hosts
      description: get Hosts
      operationId: HostController.GetHost
      parameters:
      - in: query
        name: name
        description: host name
        type: string
      - in: query
        name: ip
        description: host ip
        type: string
      - in: query
        name: page
        description: page
        type: integer
        format: int64
        default: "1"
      - in: query
        name: number
        description: page
        type: integer
        format: int64
        default: "20"
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /hosts/{id}:
    delete:
      tags:
      - hosts
      description: dd Host
      operationId: HostController.AddHost
      parameters:
      - in: path
        name: id
        description: host id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /hosts/addhost:
    post:
      tags:
      - hosts
      description: dd Host
      operationId: HostController.AddHost
      parameters:
      - in: body
        name: Host
        description: host object
        required: true
        schema:
          $ref: '#/definitions/models.Host'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /rancherservers/:
    post:
      tags:
      - rancherservers
      description: get RancherServers
      operationId: RancherServerController.GetRancherServer
      parameters:
      - in: query
        name: region
        description: RancherServer name
        type: string
      - in: query
        name: page
        description: page
        type: integer
        format: int64
        default: "1"
      - in: query
        name: number
        description: page
        type: integer
        format: int64
        default: "20"
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /rancherservers/{id}:
    delete:
      tags:
      - rancherservers
      description: dd RancherServer
      operationId: RancherServerController.AddRancherServer
      parameters:
      - in: path
        name: id
        description: RancherServer id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /rancherservers/addRancherServer:
    post:
      tags:
      - rancherservers
      description: dd RancherServer
      operationId: RancherServerController.AddRancherServer
      parameters:
      - in: body
        name: RancherServer
        description: RancherServer object
        required: true
        schema:
          $ref: '#/definitions/models.RancherServer'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /users/:
    post:
      tags:
      - users
      description: get Users
      operationId: UserController.GetUser
      parameters:
      - in: query
        name: mobile
        description: User mobile
        type: string
      - in: query
        name: email
        description: User email
        type: string
      - in: query
        name: page
        description: page
        type: integer
        format: int64
        default: "1"
      - in: query
        name: number
        description: page
        type: integer
        format: int64
        default: "20"
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /users/{id}:
    delete:
      tags:
      - users
      description: dd User
      operationId: UserController.AddUser
      parameters:
      - in: path
        name: id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
  /users/addUser:
    post:
      tags:
      - users
      description: dd User
      operationId: UserController.AddUser
      parameters:
      - in: body
        name: User
        description: User object
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Result'
definitions:
  12178.0xc00029a3f0.false:
    title: "false"
    type: object
  models.Cluster:
    title: Cluster
    type: object
    properties:
      BeginTime:
        type: string
        format: datetime
      Capacity:
        type: string
      ClusterInfo:
        type: string
      Command:
        type: string
      CpuKernel:
        type: number
        format: double
      CpuKernelLock:
        type: number
        format: double
      CpuKernelUsed:
        type: number
        format: double
      CreateTime:
        type: string
        format: datetime
      Deleted:
        type: integer
        format: int64
      Disk:
        type: number
        format: double
      DiskLock:
        type: number
        format: double
      DiskUsed:
        type: number
        format: double
      EndTime:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Limits:
        type: string
      Mem:
        type: number
        format: double
      MemLock:
        type: number
        format: double
      MemUsed:
        type: number
        format: double
      Name:
        type: string
      Network:
        type: number
        format: double
      NetworkLock:
        type: number
        format: double
      NetworkType:
        type: string
      NetworkUsed:
        type: number
        format: double
      Online:
        type: integer
        format: int64
      OwnerId:
        type: integer
        format: int64
      Pods:
        type: integer
        format: int64
      PodsUsed:
        type: integer
        format: int64
      Profit:
        type: number
        format: double
      RancherId:
        type: integer
        format: int64
      RentPrice:
        type: number
        format: double
      Requested:
        type: string
      Rid:
        type: string
      State:
        type: string
      SyncTime:
        type: string
        format: datetime
      TotalCompute:
        type: number
        format: double
      UpdateTime:
        type: string
        format: datetime
      UsedCompute:
        type: number
        format: double
  models.Host:
    title: Host
    type: object
    properties:
      BeginTime:
        type: string
        format: datetime
      CallbackUrl:
        type: string
      ClusterId:
        type: integer
        format: int64
      Command:
        type: string
      ControlPlane:
        type: integer
        format: int64
      CpuFrequency:
        type: number
        format: double
      CpuKernel:
        type: number
        format: double
      CpuKernelLock:
        type: number
        format: double
      CpuKernelUsed:
        type: number
        format: double
      CreateTime:
        type: string
        format: datetime
      Deleted:
        type: integer
        format: int64
      Disk:
        type: number
        format: double
      DiskLock:
        type: number
        format: double
      DiskUsed:
        type: number
        format: double
      EndTime:
        type: string
        format: datetime
      Etcd:
        type: integer
        format: int64
      Host:
        type: string
      HostInfo:
        type: string
      HostIp:
        type: string
      Id:
        type: integer
        format: int64
      Mem:
        type: number
        format: double
      MemLock:
        type: number
        format: double
      MemUsed:
        type: number
        format: double
      Name:
        type: string
      Network:
        type: number
        format: double
      NetworkLock:
        type: number
        format: double
      NetworkUsed:
        type: number
        format: double
      OwnerId:
        type: integer
        format: int64
      Pods:
        type: integer
        format: int64
      PodsUsed:
        type: integer
        format: int64
      PublicAddress:
        type: integer
        format: int64
      RancherId:
        type: integer
        format: int64
      Rid:
        type: string
      State:
        type: string
      SyncTime:
        type: string
        format: datetime
      TotalCompute:
        type: number
        format: double
      UpdateTime:
        type: string
        format: datetime
      UsedCompute:
        type: number
        format: double
      Worker:
        type: integer
        format: int64
  models.RancherServer:
    title: RancherServer
    type: object
    properties:
      AccessKey:
        type: string
      CreateTime:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NetworkType:
        type: string
      Region:
        type: string
      RegionEnUs:
        type: string
      SecretKey:
        type: string
      UpdateTime:
        type: string
        format: datetime
      Url:
        type: string
  models.Result:
    title: Result
    type: object
    properties:
      Code:
        type: integer
        format: int64
      Data:
        $ref: '#/definitions/12178.0xc00029a3f0.false'
      Message:
        type: string
  models.User:
    title: User
    type: object
    properties:
      AccountAddress:
        type: string
      CaptchaMode:
        type: string
      CreateTime:
        type: string
        format: datetime
      Email:
        type: string
      Id:
        type: integer
        format: int64
      LoginName:
        type: string
      Mobile:
        type: string
      NickName:
        type: string
      Password:
        type: string
      RegisterType:
        type: string
      RoleId:
        type: integer
        format: int64
      Salt:
        type: string
      UpdateTime:
        type: string
        format: datetime
tags:
- name: hosts
  description: |
    Hosts object api list
- name: clusters
  description: |
    Cluster object api list
- name: rancherservers
  description: |
    RancherServers object api list
- name: users
  description: |
    Users object api list
